"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.expandIN = void 0;
// note: must always return an expression, never return empty string
function expandIN(fieldName, table) {
    var _a, _b, _c;
    let ret = "";
    if (table.array().length === 0) {
        ret = fieldName + " NOT IN ()";
    }
    else {
        ret = fieldName + " IN (";
        const values = [];
        for (const row of table.array()) {
            if (((_a = row.get().sign) === null || _a === void 0 ? void 0 : _a.get()) !== "I" || ((_b = row.get().option) === null || _b === void 0 ? void 0 : _b.get()) !== "EQ") {
                throw "Error: IN, only I EQ supported for now";
            }
            values.push("'" + ((_c = row.get().low) === null || _c === void 0 ? void 0 : _c.get().replace(/'/g, "''")) + "'");
        }
        ret += values.join(",") + ")";
    }
    return ret;
}
exports.expandIN = expandIN;
//# sourceMappingURL=expand_in.js.map