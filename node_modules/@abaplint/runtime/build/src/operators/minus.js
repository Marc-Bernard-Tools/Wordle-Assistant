"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.minus = void 0;
const types_1 = require("../types");
const _parse_1 = require("./_parse");
const string_1 = require("../types/string");
function minus(left, right) {
    if (left instanceof types_1.Integer && right instanceof types_1.Integer) {
        return new types_1.Integer().set(left.get() - right.get());
    }
    else if (typeof left === "number" && typeof right === "number"
        && Number.isInteger(left) && Number.isInteger(right)) {
        return new types_1.Integer().set(left - right);
    }
    else if (typeof left === "number" && Number.isInteger(left) && right instanceof types_1.Integer) {
        return new types_1.Integer().set(left - right.get());
    }
    else if (typeof right === "number" && Number.isInteger(right) && left instanceof types_1.Integer) {
        return new types_1.Integer().set(left.get() - right);
    }
    else if ((left instanceof string_1.String || left instanceof types_1.Character) && Number.isInteger(Number(left.get())) && right instanceof types_1.Integer) {
        return new types_1.Integer().set(Number.parseInt(left.get(), 10) - right.get());
    }
    else if ((right instanceof string_1.String || right instanceof types_1.Character) && Number.isInteger(Number(right)) && left instanceof types_1.Integer) {
        return new types_1.Integer().set(left.get() - Number.parseInt(right.get(), 10));
    }
    return new types_1.Float().set((0, _parse_1.parse)(left) - (0, _parse_1.parse)(right));
}
exports.minus = minus;
//# sourceMappingURL=minus.js.map