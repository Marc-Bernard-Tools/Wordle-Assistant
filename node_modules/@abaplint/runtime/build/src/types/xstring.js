"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.XString = void 0;
const _parse_1 = require("../operators/_parse");
class XString {
    constructor(input) {
        this.value = "";
        this.qualifiedName = input === null || input === void 0 ? void 0 : input.qualifiedName;
    }
    getQualifiedName() {
        return this.qualifiedName;
    }
    set(value) {
        if (typeof value === "string") {
            this.value = value;
            const finalLength = Math.ceil(this.value.length / 2) * 2;
            this.value = this.value.padEnd(finalLength, "0");
        }
        else {
            const v = value.get();
            if (typeof v === "number") {
                this.value = v.toString(16);
                const finalLength = Math.ceil(this.value.length / 2) * 2;
                this.value = this.value.padStart(finalLength, "0");
            }
            else {
                this.set(v);
            }
        }
    }
    clear() {
        this.value = "";
    }
    get() {
        return this.value;
    }
    getOffset(input) {
        if (input === null || input === void 0 ? void 0 : input.offset) {
            input.offset = (0, _parse_1.parse)(input.offset);
        }
        if (input === null || input === void 0 ? void 0 : input.length) {
            input.length = (0, _parse_1.parse)(input.length);
        }
        let ret = this.value;
        if (input === null || input === void 0 ? void 0 : input.offset) {
            // @ts-ignore
            ret = ret.substr(input.offset * 2);
        }
        if ((input === null || input === void 0 ? void 0 : input.length) !== undefined) {
            // @ts-ignore
            ret = ret.substr(0, input.length * 2);
        }
        const r = new XString();
        r.set(ret);
        return r;
    }
}
exports.XString = XString;
//# sourceMappingURL=xstring.js.map