import { INumeric } from "./_numeric";
import { ICharacter } from "./_character";
import { ABAPObject } from "./abap_object";
import { Table } from "./table";
import { String } from "./string";
import { Structure } from "./structure";
import { Hex } from "./hex";
declare type PointerType = INumeric | Table | ICharacter | ABAPObject | undefined | Structure;
export declare class FieldSymbol {
    private pointer;
    private casting;
    private readonly type;
    constructor(type?: PointerType);
    assign(pointer: PointerType): void;
    setCasting(): void;
    unassign(): void;
    isAssigned(): boolean;
    getPointer(): any;
    clear(): void | Structure | undefined;
    get(): any;
    appendInitial(): import("./table").TableRowType | undefined;
    array(): any;
    set(value: any): this;
    getOffset(input: {
        offset?: number | INumeric | Hex;
        length?: number | INumeric | Hex;
    }): String;
}
export {};
