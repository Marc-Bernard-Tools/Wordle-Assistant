"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Structure = void 0;
const clone_1 = require("../clone");
const field_symbol_1 = require("./field_symbol");
const table_1 = require("./table");
class Structure {
    constructor(fields, qualifiedName) {
        this.value = fields;
        this.qualifiedName = qualifiedName === null || qualifiedName === void 0 ? void 0 : qualifiedName.toUpperCase();
    }
    clear() {
        for (const f in this.value) {
            // @ts-ignore
            this.value[f].clear();
        }
        return this;
    }
    getQualifiedName() {
        return this.qualifiedName;
    }
    set(input) {
        if (input === undefined) {
            return;
        }
        if (input instanceof field_symbol_1.FieldSymbol) {
            this.set(input.getPointer());
        }
        else if (input instanceof table_1.Table) {
            throw "Structure, input is a table";
        }
        else if (input instanceof Structure) {
            const obj = input.get();
            for (const f in obj) {
                // @ts-ignore
                this.value[f].set((0, clone_1.clone)(obj[f]));
            }
        }
        else {
            this.setCharacter(input);
        }
        return this;
    }
    setCharacter(input) {
        this.clear();
        let val = input;
        if (typeof val !== "string") {
            val = val.get() + "";
        }
        for (const key of Object.keys(this.value)) {
            const targetLength = this.value[key].getLength();
            this.value[key].set(val.substr(0, targetLength));
            val = val.substr(targetLength);
        }
    }
    get() {
        return this.value;
    }
}
exports.Structure = Structure;
//# sourceMappingURL=structure.js.map