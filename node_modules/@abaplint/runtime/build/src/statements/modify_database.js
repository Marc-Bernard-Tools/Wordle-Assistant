"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ModifyDatabase = void 0;
const types_1 = require("../types");
const insert_database_1 = require("./insert_database");
const update_database_1 = require("./update_database");
class ModifyDatabase {
    constructor(context) {
        this.context = context;
    }
    async modifyDatabase(table, options) {
        if (options.table instanceof types_1.FieldSymbol) {
            options.table = options.table.getPointer();
        }
        if (options.from instanceof types_1.FieldSymbol) {
            options.from = options.from.getPointer();
        }
        const insert = new insert_database_1.InsertDatabase(this.context);
        const update = new update_database_1.UpdateDatabase(this.context);
        if (options.table) {
            for (const row of options.table.array()) {
                const subrc = await insert.insertDatabase(table, { values: row });
                if (subrc !== 0) {
                    await update.updateDatabase(table, { from: row });
                }
            }
        }
        else if (options.from) {
            const subrc = await insert.insertDatabase(table, { values: options.from });
            if (subrc !== 0) {
                await update.updateDatabase(table, { from: options.from });
            }
        }
        else {
            throw "modifyDatabase todo";
        }
    }
}
exports.ModifyDatabase = ModifyDatabase;
//# sourceMappingURL=modify_database.js.map