"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.WriteStatement = void 0;
const types_1 = require("../types");
class WriteStatement {
    constructor(context) {
        this.context = context;
    }
    write(source, options) {
        var _a;
        if ((options === null || options === void 0 ? void 0 : options.skipLine) === true) {
            this.context.console.add("\n");
        }
        else {
            if ((options === null || options === void 0 ? void 0 : options.newLine) === true && this.context.console.get().length > 0) {
                this.context.console.add("\n");
            }
            let result = "";
            if (typeof source === "string" || typeof source === "number") {
                result = source.toString();
            }
            else if (source instanceof types_1.Structure) {
                const obj = source.get();
                for (const f in obj) {
                    this.write(obj[f], Object.assign({}, options));
                }
            }
            else if (source instanceof types_1.Float) {
                if (((_a = options === null || options === void 0 ? void 0 : options.exponent) === null || _a === void 0 ? void 0 : _a.get()) === 0) {
                    const tens = source.getRaw().toFixed(0).length - 1;
                    if (options.noSign === true && source.getRaw() < 0) {
                        result = source.getRaw().toFixed(17 - tens).replace(".", ",");
                        result = result.replace("-", "");
                    }
                    else {
                        result = source.getRaw().toFixed(16 - tens).replace(".", ",");
                    }
                }
                else {
                    result = source.get().toString();
                }
            }
            else {
                result = source.get().toString();
            }
            if (options === null || options === void 0 ? void 0 : options.target) {
                options.target.set(result);
            }
            else {
                this.context.console.add(result);
            }
        }
    }
}
exports.WriteStatement = WriteStatement;
//# sourceMappingURL=write.js.map