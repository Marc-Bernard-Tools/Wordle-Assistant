"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UpdateDatabase = void 0;
const types_1 = require("../types");
class UpdateDatabase {
    constructor(context) {
        this.context = context;
    }
    async updateDatabase(table, options) {
        if (options.table instanceof types_1.FieldSymbol) {
            options.table = options.table.getPointer();
        }
        if (options.from instanceof types_1.FieldSymbol) {
            options.from = options.from.getPointer();
        }
        if (typeof table !== "string") {
            table = table.get();
        }
        // @ts-ignore
        const keys = abap.DDIC[table.toUpperCase()].keyFields;
        const where = [];
        const set = [];
        if (options.from) {
            const structure = options.from.get();
            for (const k of Object.keys(structure)) {
                // todo, integers should not be surrounded by '"'?
                const str = k + ' = "' + structure[k].get() + '"';
                if (keys.includes(k.toUpperCase())) {
                    where.push(str);
                }
                else {
                    set.push(str);
                }
            }
        }
        else {
            throw "updateDatabase, todo";
        }
        const { subrc, dbcnt } = await this.context.defaultDB().update({ table, where: where.join(" AND "), set });
        // @ts-ignore
        abap.builtin.sy.get().subrc.set(subrc);
        // @ts-ignore
        abap.builtin.sy.get().dbcnt.set(dbcnt);
        return subrc;
    }
}
exports.UpdateDatabase = UpdateDatabase;
//# sourceMappingURL=update_database.js.map